// ZPL Logo Data from your working label app
const BT_JPG_ZPL = `
~DGBT.JPG,G,00020,00960,
^FO50,50^GFA,10582,10582,74,S01JFC,S03JFC,S07JFO02,S0JFEO06,R01JFCO0C,R03JF8N018,R07JFO03,R0JFEO06,Q01JFCO0C,I0LF003JF8N018,I0KFE007JF01F8K03,I0KFC00JFE03FF8J06,I0KF801JFC07FFEJ0C,I0KF003JF80JF80018,I0JFE007JF01JFE003,I0JFC00JFE03KF806,I0JF801JFC07KFC0E,I0JF003JF80LFC1F,I0IFE007JF01LF83F8,I0IFC00JFE03LF07FC,I0IF801JFC07KFE0FFC,I0IF003JF80LFC1FFE,I0FFE007JF01LF83FFE,I0FFC00IF8003LF07IF,I0FF801IF8007KFE0JF,I0FF003IF800LFC1JF8,I0FE007IF801LF83JF8,I0FC00JF803LF07JF8,I0F801JF807KFE0KFCkH0FF,I0F003JF80LFC1KFCP07IFCN07ER03FO07IFCO0KFEL0LFCL0KFEN07FFEN07CI07E,I0E007JF01LF83KFCP07JF8M07ER07FO07JF8N0KFEL0LFCL0KFEM01JF8M07CI07E,I0C00JFE03LF07KFCP07JFCM07ER07F8N07JFEN0KFEL0LFCL0KFEM03JFCM07CI07E,I0801JFCM060CKFCP07JFEM07ER07F8N07KFN0KFEL0LFCL0KFEM07FC3FEM07CI07E,K01JF8N018KFCP07C00FFM07ER0FFCN07F03FF8M0KFEL0LFCL0KFEM0FE00FFM07CI07E,K01JFO030KFCO01F8003FM07ER0FFCN07E003FCM0FCR03FO0F8P01FC003FM07CI07E,K01IFEO060KFCP0F8001F8L07EQ01F3CN07EI0FEM0FCR03FO0F8P01F8003F8L07CI07E,K01IFCO0C0KFCO01F8001F8L07EQ01F3EN07EI07EM0FCR03FO0F8P03FI01F8L07CI07E,K01IF8N0180KFCO01F8001F8L07EQ01F3EN07EI03FM0FCR03FO0F8P03FI01F8L07CI07E,K01IFO0300KFCO01F8001FM07EQ03E3FN07EI03FM0FCR03FO0F8P07EJ0F8L07CI07E,K01FFEO0600KFCO01F8001FM07EQ03E1FN07EI03FM0FCR03FO0F8P07ER07CI07E,K01FFCO0C01KFCO01F8003FM07EQ03E1FN07EI01FM0FCR03FO0F8P07ER07CI07E,K01FF8N01803KFCO01F8003EM07EQ07C1F8M07EI01F8L0FCR03FO0F8P07CR07EI0FE,K01FFO03007KFCO01FC00FCM07EQ07C0F8M07EI01F8L0KFCN03FO0KFCL07CR07KFE,K01FEO0600LFCO01KF8M07EQ0FC0FCM07EI01F8L0KFCN03FO0KFCL0FCR07KFE,K01FCO0EEMF8O01KFCM07EQ0F807CM07EI01F8L0KFCN03FO0KFCL0FCR07KFE,K01F8N01OF8O01KFEM07EQ0F807CM07EI01F8L0KFCN03FO0KFCL0FCR07KFE,K01FO03OF8O01FC007FM07EP01F007EM07EI01F8L0FCR03FO0FCP0FCR07EI0FE,K01E02M07OFP01F8001F8L07EP01F003EM07EI01F8L0FCR03FO0F8P07CR07CI07E,K01C06M0PFP01F8I0F8L07EP03JFEM07EI01F8L0FCR03FO0F8P07CR07CI07E,K0180EL01OFEP01F8I0FCL07EP03KFM07EI01FM0FCR03FO0F8P07EJ0F8L07CI07E,K0101EL03OFEP01F8I0FCL07EP03KFM07EI01FM0FCR03FO0F8P07EJ0F8L07CI07E,M03EL07OFCP01F8I0FCL07EP07KF8L07EI03FM0FCR03FO0F8P03EI01F8L07CI07E,M07EL0PFCP01F8I0FCL07EP07E001F8L07EI03FM0FCR03FO0F8P03FI01F8L07CI07E,M0FEK01PFCP01F8I0FCL07EP07CI0F8L07EI07EM0FCR03FO0F8P03FI03FM07CI07E,L01FEK03PFEP01F8I0FCL07EP0FCI0FCL07EI0FEM0FCR03FO0F8P01F8003FM07CI07E,L03FEK07QFP01F8001F8L07EP0F8I0FCL07E003FCM0FCR03FO0F8Q0FC007EM07CI07E,L07FEK0RF8O01F8007F8L07JFEK01F8I07EL07E01FF8M0KFEN03FO0KFEM0FF01FEM07CI07E,L0FFEJ01RFCO01LFM07JFEK01F8I07EL07KFN0KFEN03FO0KFEM07JFCM07CI07E,K01FFEJ03RFCO01KFEM07JFEK01FJ07EL07JFEN0KFEN03FO0KFEM01JF8M07CI07E,K03FFEJ07RFCO01KFCM07JFEK03FJ03FL07JFCN0KFEN03FO0KFEN0IFEN07CI07E,K07FFEJ0TFP0JFEN07JFEK03FJ03FL07IFEO0KFEN03FO0KFEN03FF8N07CI07E,K0IFEI01TFkH038,J01IFEI03TF8,J03IFEI07TF8,J07IFEI0UF8,J0JFE001UFC,I01JFE0033TFC,I03JFE006O0LFC,I07JFE00CO03KFE,I07JFE018O01KFEiH0F8,I07JFE03Q0KFEiG03FE018W018P0FFCP0E,I07JFE06Q0KFEiG070E018W018P0E1EP06,I07JFE0CQ07JFEiG0607018W018P0E07,I07JFC18Q07JFEiG06I019C001C0062023K019C00C0CJ0E03001C001C00400310046,I07JF83R07JFEiG07I01FF007F006E03FCJ01FF00E1CJ0E03007F007F00E00FF80FF8,I07JF07R07JFEiG07C001E70063807E038EJ01E300E18J0E0380E380E380E01C70071C,I07IFE0FR07JFEiG03F801C300E180700307J01C180618J0E0380C180E180E01830061C,I07IFC1FR07JFEiH07E0183I0180700303J018180738J0E0380C1807I0E03830060C,I07IF83FR0KFEiI0F0183001F80600303J01818073K0E0381FFC07E00E03030060C,I07IF07FR0KFEiG0C070183007F80600303J01818033K0E0301CJ0F80E03030060C,I07FFE0FFQ01KFEiG0E07018300E180600303J0181803FK0E0701CJ0180E03830060C,I07FFC1FFQ03KFEiG0E07018300C180600307J01C1801EK0E0700C180E1C0E01870060C,I07FF83FFQ07KFCiG070E018300E380600386J01E3801EK0E1E00E380E180E01EF0060C,I07FF07FFP03LFCiG03FC018300FFC060037EJ01BF001CK0FF8007F007F00E00FB0060C,I07FE0gFCiH0FM038CJ0338K01CI0CP01C001EL03,I07FC1gF8iW03Q01Cg0183,I07F83gF8iW03Q018g01C7,I07F07gF8iW03Q078gG0FE,I07E0gGFjP06gH03,I0781gGF,I0703gFE,I0607gFC,I060gGFC,J01gGF8,J01gGF,J03gFE,J0gGFC,I01BgF8,I033gF,I063YFE,I0C3YFC,00183YF,00303XFC,00603XF,00C03WF8,018,03,06,0C,18,3,6,C,,:::::::::::::::::::::::::::::^FS
`;

export interface ItemLabelData {
  systemCode: string;
  itemCode: string;
  description: string;
  weight: number;
  location?: string;
  operator: string;
  date: string;
}

export interface LocationLabelData {
  code: string;
  row: string;
  bay: string;
  level: string;
  height: number;
  maxWeight: number;
  currentWeight: number;
  rackType: string;
}

/**
 * Generate ZPL for item labels (103x103mm)
 * Optimized for 203 DPI printer (approximately 800x800 dots)
 */
export function generateItemZPL(data: ItemLabelData): string {
  // Helper function to truncate text if too long
  const truncateText = (text: string, maxLength: number) => {
    return text.length > maxLength ? text.substring(0, maxLength - 3) + '...' : text;
  };

  // Calculate dynamic positioning for long text
  const getTextX = (text: string, baseX: number = 15) => {
    if (!text) return baseX;
    if (text.length > 25) return 5;   // Start further left for very long text
    if (text.length > 20) return 10;  // Start a bit further left
    return baseX; // Normal position
  };

  const getFieldWidth = (startX: number) => {
    return 785 - startX; // Total width minus starting position
  };

  const itemCodeX = getTextX(data.itemCode);
  const descriptionX = getTextX(data.description);
  const itemCodeWidth = getFieldWidth(itemCodeX);
  const descriptionWidth = getFieldWidth(descriptionX);

  return `
${BT_JPG_ZPL}
^XA
^PW800
^FO15,60^XGR:BT.JPG,1,1^FS
^FO${itemCodeX},210^FB${itemCodeWidth},1,0,R,0^A0N,72,72^FD${truncateText(data.itemCode, 30)}^FS
^FO${descriptionX},290^FB${descriptionWidth},1,0,R,0^A0,36,36^FD${truncateText(data.description, 40)}^FS
^FO0,390^FB800,1,0,C,0^A0N,96,96^FD${data.systemCode}^FS
^FO0,510^FB800,1,0,C,0^A0,48,48^FDWeight: ${data.weight}kg^FS
${data.location ? `^FO0,560^FB800,1,0,C,0^A0,36,36^FDLocation: ${data.location}^FS` : ''}
^FO45,670^A0,32,32^FDDate: ${data.date}^FS
^FO45,710^A0,32,32^FDOperator: ${data.operator}^FS
^FO600,600^BQN,2,5^FDQA,${data.systemCode}^FS
^XZ
`.trim();
}

/**
 * Generate ZPL for location labels (103x103mm)
 * Optimized for 203 DPI printer (approximately 800x800 dots)
 * Includes both linear barcode and QR code with prominent location code
 */
export function generateLocationZPL(data: LocationLabelData): string {
  const rackTypeName = data.rackType || 'Standard';
  const levelText = data.level === '0' ? 'Ground' : `Level ${data.level}`;
  const weightText = data.level === '0' ? 'No Weight Limit' : `Max: ${data.maxWeight}kg`;
  const currentWeightText = data.currentWeight > 0 ? `Current: ${data.currentWeight}kg` : '';

  return `
${BT_JPG_ZPL}
^XA
^PW800
^FO15,60^XGR:BT.JPG,1,1^FS
^FO0,210^FB800,1,0,C,0^A0N,72,72^FDWAREHOUSE LOCATION^FS
^FO0,290^FB800,1,0,C,0^A0,48,48^FDRow ${data.row} • Bay ${data.bay}^FS
^FO0,370^FB800,1,0,C,0^A0N,120,120^FD${data.code}^FS
^FO0,500^FB800,1,0,C,0^A0,40,40^FD${levelText} • Height: ${data.height}m^FS
^FO0,550^FB800,1,0,C,0^A0,32,32^FD${weightText}^FS
${currentWeightText ? `^FO0,580^FB800,1,0,C,0^A0,28,28^FD${currentWeightText}^FS` : ''}
^FO0,${currentWeightText ? '610' : '580'}^FB800,1,0,C,0^A0,24,24^FD${rackTypeName} Rack^FS
^FO50,650^BY2,3,40^BCN,40,Y,N,N^FD${data.code}^FS
^FO600,580^BQN,2,4^FDLOC,${data.code}^FS
^XZ
`.trim();
}

/**
 * Generate bulk ZPL for multiple location labels
 * Each label will be on a separate page
 */
export function generateBulkLocationZPL(locations: LocationLabelData[]): string {
  return locations.map(location => generateLocationZPL(location)).join('\n\n');
}